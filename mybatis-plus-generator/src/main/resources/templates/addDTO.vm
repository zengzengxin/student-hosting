package ${package.Entity}.${cfg.voDTODir};

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.hibernate.validator.constraints.Range;

#foreach($pkg in ${table.importPackages})
import ${pkg};
#end
#if(${entityLombokModel})

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;
#end

/**
* @author ${author}
* @since ${date}
*/
@ApiModel(value ="$!{table.comment}")
#if(${entityLombokModel})
@Data
    #if(${superEntityClass})
    @EqualsAndHashCode(callSuper = true)
    #else
    @EqualsAndHashCode(callSuper = false)
    #end
@Accessors(chain = true)
#end
public class ${entity}CmsAddDTO implements Serializable {

private static final long serialVersionUID = 1L;

## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
    #if(${field.keyFlag})
        #set($keyPropertyName=${field.propertyName})
    #end
    #if($!field.comment != "" && !${field.keyFlag})
        #if("$!field.propertyName"=="createTime" || "$!field.propertyName"=="updateTime" &&
            "$!field.propertyType"=="LocalDateTime"  )
        #elseif("${logicDeleteFieldName}"=="${field.name}")
        #elseif("${versionFieldName}"=="${field.name}")
        #else
        @ApiModelProperty(value = "${field.comment}")
        #end
    #end
## 普通字段
    #if(${field.fill})
    ## -----   存在字段填充设置   -----
        #if(${field.convert})
        @TableField(value = "${field.name}", fill = FieldFill.${field.fill})
        #else
        @TableField(fill = FieldFill.${field.fill})
        #end
    #elseif(${field.convert})
    @TableField("${field.name}")
    #end
## 乐观锁注解
    #if(${versionFieldName}==${field.name})
    #end
## 逻辑删除注解
    #if(${logicDeleteFieldName}==${field.name})
    #end
##  私有属性
    #if(${logicDeleteFieldName}==${field.name} ||${versionFieldName}==${field.name} || ${field.keyFlag}
    || ${field.propertyName}=="createTime" || ${field.propertyName}=="updateTime")
    #else
    ##校验注解
        #if("${field.propertyType}"=="String")
        @NotBlank(message = "${field.comment}不能为空")
        #else
        @NotNull(message = "${field.comment}不能为空")
        #end
        #if("${field.propertyType}"=="Integer")
        @Range(min = 0, max = 20000, message = "${field.comment}范围必须在【{min},{max}】之间")
        #elseif("${field.propertyType}"=="String")
        @Size(min = 1, max = 100, message = "${field.comment}长度必须在【{min}和{max}】之间")
        #end
    private ${field.propertyType} ${field.propertyName};
    #end

#end
## ----------  END 字段循环遍历  ----------

#if(!${entityLombokModel})
    #foreach($field in ${table.fields})
        #if(${field.propertyType.equals("boolean")})
            #set($getprefix="is")
        #else
            #set($getprefix="get")
        #end
    public ${field.propertyType} ${getprefix}${field.capitalName}() {
    return ${field.propertyName};
    }

        #if(${entityBuilderModel})
        public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
        #else
        public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
        #end
    this.${field.propertyName} = ${field.propertyName};
        #if(${entityBuilderModel})
        return this;
        #end
    }
    #end
#end

#if(${entityColumnConstant})
    #foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} = "${field.name}";

    #end
#end
#if(!${entityLombokModel})
@Override
public String toString() {
return "${entity}{" +
    #foreach($field in ${table.fields})
        #if($!{velocityCount}==1)
        "${field.propertyName}=" + ${field.propertyName} +
        #else
        ", ${field.propertyName}=" + ${field.propertyName} +
        #end
    #end
"}";
}
#end
}
