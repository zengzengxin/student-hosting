package ${package.Controller};


import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.web.PageableDefault;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.Set;
import ${package.Service}.${table.serviceName};
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
* @author ${author}
* @since ${date}
*/
@Api(tags = {"$!{table.comment}"})
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("/api#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {
    #end
##    ${entity}.toCamelName()
    #set($start=$entity.substring(0,1).toLowerCase() )
    #set($end=$entity.substring(1,$entity.length()).toLowerCase() )
##@Resource(name = "${start}${end}ServiceImpl")
@Autowired
private I${entity}Service i${entity}Service;


@GetMapping
@ApiOperation("查询单条")
public Object findOne(@ModelAttribute @Valid Object object) {
return null;
}


@PostMapping
@ApiOperation("添加")
public void save(@RequestBody @Valid Object object) {
}

@DeleteMapping
@ApiOperation("删除")
public void delete(@RequestParam @ApiParam("id列表") Set<Integer> ids) {
    }

    @PutMapping
    @ApiOperation("修改")
    public Object update(@RequestBody Object object) {
    return null;
    }

    @GetMapping("/page")
    @ApiOperation("分页")
    public Page<Object> page(@ModelAttribute Object dto, @PageableDefault(sort = "id", direction = Sort.Direction.DESC) Pageable pageable) {
        return null;
        }
    }

#end